= form_tag(lesson_create_path(id: @lesson_obj.id, form_step:4), method: "post", multipart: true, id:"form") do
  %article
    .wrapped
      %fieldset
        %legend
          %h3 Who is this for?

        -# Grade range
        .field-group
          %label
            Grade Range
            %small Specify one or more
          .field-wrapper
            %input{type: 'text', id: 'grade', readonly: 'readonly'}
              %div#slider-range
              -#@TODO two values expected, in a hidden field

      -# Subject
      %fieldset
        .field-group
          %label.field-description
            Subjects
            %small Add one or more
          .field-wrapper
            - @subjects.each do |s|
              .checkbox
                %label
                  - @checked = @lesson_obj.getSubjects.any? { |a| s.titleize.include?(a.titleize) }
                  %input{name: 'subject', type: 'checkbox', value: s, checked: @checked}
                  =s.titleize

      -# Difficulty level
      %fieldset
        .field-group#difficulty
          %label
            Difficulty Level
            %small How hard is this lesson
          .field-wrapper
            .radio-group
              %small For student
              - @difficulty_helper[:students].each do |dl|
                .radio
                  %label

                    - if @lesson_obj.student_difficulty.present? && @lesson_obj.student_difficulty[:level].titleize == dl[:name]
                      %input{name: 'difficulty-student', type: 'radio', value: dl[:value], checked: true}
                    -else
                      %input{name: 'difficulty-student', type: 'radio', value: dl[:value]}
                    = dl[:name]

            .radio-group
              %small For educator
              - @difficulty_helper[:teachers].each do |dl|
                .radio
                  %label
                    - if @lesson_obj.educator_difficulty.present? && @lesson_obj.educator_difficulty[:level].titleize == dl[:name]
                      %input{name: 'difficulty-educator', type: 'radio', value: dl[:value], checked: true}
                    -else
                      %input{name: 'difficulty-educator', type: 'radio', value: dl[:value]}
                    = dl[:name]




      -# Context
      %fieldset
        .field-group
          %label
            Context
            %small What kind of project is this?
          .field-wrapper
            - @context.each do |c|
              .checkbox
                %label
                  - @checked = @lesson_obj.getContext.any? { |a| c.titleize.include?(a.titleize) }
                  %input{name: 'subject', type: 'checkbox', value: c, checked: @checked}
                  =c.titleize


      -# Collection
      %fieldset
        .field-group
          %label
            Collection
            %small Does this belong to a collection?
          .field-wrapper
            =select(:lesson, :collection_tag, options_for_select(@collections))

      -# Tags
      -#%fieldset
        -#.field-group
          -#%label
            -#Tags
            -#%small Enter, comma, separated, tags
          -#.field-wrapper
            -#.tags-input
              -#= text_field(:lesson, :tags, multiple: true)

    %footer
      .wrapped
        =link_to 'Back to standards', lesson_new_path(id: @lesson_obj.id, form_step:2), class: 'button button--call'
        -#=link_to 'Add some instructions', lesson_new_path(step:4), class: 'button button--call'
        -#=link_to 'Add some instructions', '', class: 'button button--call', onclick: "$('#form').submit()"
        = submit_tag('Add some instructions', class: 'button button--call ajax-details')



:javascript
     /**
     * AJAX BELOW
     */
    $('.ajax-details').hover(function() {

        console.log('submit details');
        parameters = {};
        standards_data = [];

         // TODO --
        // grade_range= {start: , end: }
        // tags = ...

        subjects_data= [];
        $('input[name=subject]:checked').each(function(){
          subjects_data.push($(this).val());
        });

        context_data= [];
        $('input[name=context]:checked').each(function(){
          context_data.push($(this).val());
        });

        difficulty_level_data = { student: $('input[name=difficulty-student]:checked').val() , educator: $('input[name=difficulty-educator]:checked').val() }


        parameters = {lesson: {subjects: subjects_data, context: context_data, difficulty_level: difficulty_level_data} };
        console.log(parameters);



        $.ajax({
            type: "PUT",
            url: "/lessons/#{@lesson_obj.id}",
            // The key needs to match your method's input parameter (case-sensitive).
           data: JSON.stringify(parameters),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(data){console.log(data);},
            failure: function(errMsg) {
                alert(errMsg);
            }
        });
    });